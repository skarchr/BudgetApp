@using System.Activities.Statements
@using BudgetApp.Extensions
@using BudgetApp.Models
@using Microsoft.Ajax.Utilities
@model List<Transaction>

    @{
        ViewBag.Title = "Transactions";
    }



    <div ng-controller="transactionController">        
        
        <div class="text-center">
            <div ng-show="(model).length > numPerPage" pagination data-items-per-page="numPerPage" total-items="(model).length" ng-model="currentPage" max-size="maxSize" boundary-links="true" rotate="false"></div>
        </div>

        <table class="table table-condensed table-hover">
            <thead>
                <tr>
                    <th class="hidden-xs" style="width: 50px !important;">#</th>
                    <th class="hidden"></th>
                    <th class="hidden"></th>
                    <th class="hidden"></th>
                    <th sortable-table-header="amount">Amount</th>
                    <th class="text-left" sortable-table-header="category">Category</th>
                    <th sortable-table-header="description" class="hidden-xs hidden-sm">Description</th>
                    <th sortable-table-header="date" class="hidden-xs hidden-md hidden-sm">Date</th>
                    <th></th>
                </tr>
            </thead>
            <tbody>
                <tr ng-repeat="row in model | orderBy:predicate:reverse | startFrom:(currentPage - 1)*numPerPage | limitTo:numPerPage" style="{{row.categoryType === 'Income' ? 'color:#1CA784;':''}}">
                    <td class="hidden-xs">

                        <span class="percentage-row" ng-show="row.category !== 'Salary' && row.category !== 'OtherIncome'">
                            <svg set-width="{{calcRowPercentage(row.amount, findMax(model))}}" height="30">
                                <rect set-width="{{calcRowPercentage(row.amount, findMax(model))}}" height="30" style="stroke-width:0;fill:{{row.color}};opacity:0.2" />
                            </svg>
                        </span>                        
                        {{model.length -((currentPage-1)*numPerPage + ($index))}}
                    </td>
                    <td class="hidden">{{row.mainCategory}}</td>
                    <td class="hidden">{{row.categoryText}}</td>
                    <td class="hidden">{{row.categoryType}}</td>
                    <td class="text-right" style="padding-right: 30px;width: 100px;">{{row.amount | currencyFormatter}}</td>
                    <td class="text-left" style="width: 220px;">
                        <img class="hidden-xs hidden-sm" style="position: absolute;" height="20" ng-src="{{getIcon(row.category)}}" alt="{{row.category}}" />
                        <span style="padding-left: 30px;">{{row.category | camelCaseToNormal}}</span>
                    </td>
                    <td class="hidden-xs hidden-sm" style="text-align: left" title="{{row.description}}">
                        <span class="label label-success new-today" ng-show="(row.date | date : 'dd.MM.yy') === (today | date : 'dd.MM.yy')">New</span>
                        {{row.description}}
                    </td>
                    <td class="hidden-md hidden-xs hidden-sm">{{row.date | date}}</td>
                    <td class="text-right">
                        <a class="link edit-link" href="{{urls.edit}}/{{row.transactionId}}" title="Edit"><i class="glyphicon glyphicon-pencil"></i></a>
                        <a class="link delete-link" href="{{urls.del}}/{{row.transactionId}}" title="Delete">
                            <i class="glyphicon glyphicon-trash"></i>
                        </a>                        
                    </td>
                </tr>
            </tbody>
        </table>

        <div class="text-center">
            <div ng-show="(model).length > numPerPage" pagination data-items-per-page="numPerPage" total-items="(model).length" ng-model="currentPage" max-size="maxSize" boundary-links="true" rotate="false"></div>
        </div>
    </div>

    <script>

    (function() {
        'use strict';

        angular.module('budgetApp').factory('transactionModel', function() {

            return {
                model:@Html.Raw(Model.ToJson()),
                urls: {
                    del: '@Url.Action("Delete")',
                    edit: '@Url.Action("Edit")',
                    details: '@Url.Action("Details")'
            }
        };

    });

    })();

    </script>