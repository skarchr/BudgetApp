@using BudgetApp.Extensions
@using BudgetApp.Models
@model TransactionsViewModel

@{
    ViewBag.Title = "Transactions";
}



<div class="row" style="margin-top: 30px;" ng-controller="transactionController">


    <div class="col-xs-12" fade-in="200">
        @using (Html.BeginForm("Index", "Transactions", FormMethod.Post))
        {
            <div class="row">
                <div class="col-xs-12 col-md-6">
                    <a href="@Url.Action("Create")" class="btn btn-default text-center" title="Add transaction" style="min-width: 167px;">
                        Add
                    </a>
                    <a href="@Url.Action("Upload")" class="btn btn-default text-center" title="Import transactions" style="min-width: 167px;">
                        Import
                    </a>

                </div>
                <div class="col-xs-12 col-md-6 text-right" style="margin-top:5px;">
                    <span class="label label-danger label-big" style="background-color: #FF0000;">Out: @Model.TotalExpenses</span>
                    
                    <span class="label label-success label-big" style="background-color:#48DDb8;">In: @Model.TotalIncome</span>
                </div>
            </div>

            <div class="row" style="margin-top: 40px;">
                <div class="col-xs-12 col-md-6">
                    @if (Model.TotalPages > 1)
                    {

                        <div class="btn-group" role="group">

                            @if (Model.CurrentPage != 1)
                            {
                                <button type="button" set-page="@(Model.CurrentPage -1)" class="btn btn-default" style="margin-right:5px;padding: 6px 4px;">
                                    <i class="glyphicon glyphicon-chevron-left"></i>
                                </button>
                            }
                            @for (var i = 1; i <= Model.TotalPages; i++)
                            {
                                <button type="button" set-page="@i" class="btn btn-default @(i == Model.CurrentPage ? "active" : "")">
                                    @i
                                </button>
                            }
                            @if (Model.CurrentPage != Model.TotalPages)
                            {
                                <button type="button" set-page="@(Model.CurrentPage + 1)" class="btn btn-default" style="margin-left:5px;padding: 6px 4px;">
                                    <i class="glyphicon glyphicon-chevron-right"></i>
                                </button>
                            }


                        </div>
                    }
                </div>

                <div class="col-xs-12 col-md-6 text-right">
                                                                                
                    @Html.HiddenFor(s => s.Range)                    
                    @Html.HiddenFor(s => s.CurrentPage)                    

                    <div class="btn-group" role="group">
                                                
                        <button style="padding-left:24px;padding-right: 24px;" type="button" set-range="@Range.All" class="btn btn-default @(Model.Range == Range.All ? "active":"")">
                            All
                        </button>
                        <button type="button" set-range="@Range.Annual" class="btn btn-default @(Model.Range == Range.Annual ? "active":"")">
                            Annual
                        </button>
                        <button type="button" set-range="@Range.Month" class="btn btn-default @(Model.Range == Range.Month ? "active":"")">
                            Monthly
                        </button>
                        <button type="button" set-range="@Range.Week" class="btn btn-default @(Model.Range == Range.Week ? "active":"")">
                            Weekly
                        </button>
                    </div>
                    
                    <input type="submit" id="submitBtn" class="hidden" />

                </div>


            </div>
        }


        @if (!Model.RangeViewers.Any())
        {

            <div class="jumbotron" fade-in="100" style="margin-top:30px;">

                <div id="icon" style="width: 30%;">
                    <object>
                        <img src="~/Content/images/logo_pig.svg" id="svg" />
                    </object>
                </div>

                <h3 class="text-center" style="margin-top: -40px;">No transactions registered</h3>

            </div>


        }
        else
        {

            <div class="row" style="margin-top: 20px;">

                <div class="col-xs-12">

                    <span id="big" style="height:350px;width:1123px !important;" class="visible-lg" data-overview-highchart="{{overviewGraph}}" data-range="@Model.Range"></span>

                    <span id="medium" style="height:350px;width:923px !important;" class="visible-md" data-overview-highchart="{{overviewGraph}}" data-range="@Model.Range"></span>

                    <span id="small" style="height:350px;width:703px !important;" class="visible-sm" data-overview-highchart="{{overviewGraph}}" data-range="@Model.Range"></span>

                </div>



                <div class="col-xs-12" style="margin-top:30px;" ng-repeat="range in model" ng-show="rangeElem === $index">


                    <div class="panel panel-default">


                        <div class="panel-body" style="padding-bottom: 0;">

                            <div class="row">

                                <div class="col-xs-12 text-center">
                                    <span>
                                        {{range.startDate | date : 'dd.MM.yyyy'}} - {{range.endDate | date: 'dd.MM.yyyy'}}
                                    </span>

                                </div>

                            </div>

                            <div class="row" style="margin-top: 13px;">
                                <div class="col-xs-12 placeholder hidden-xs">

                                    <span style="height:350px;width:1123px !important;" class="visible-lg" data-highchart="{{range.graph}}"></span>

                                    <span style="height:350px;width:923px !important;" class="visible-md" data-highchart="{{range.graph}}"></span>

                                    <span style="height:350px;width:703px !important;" class="visible-sm" data-highchart="{{range.graph}}"></span>

                                </div>

                            </div>
                        </div>
                        <table class="table table-condensed table-same-width table-hover" style="margin-top: 18px;">
                            <thead>
                                <tr>
                                    <th class="hidden-xs">#</th>
                                    <th sortable-table-header="amount">Amount (@Model.Currency)</th>
                                    <th sortable-table-header="category">Category</th>
                                    <th sortable-table-header="description" class="hidden-xs hidden-sm">Description</th>
                                    <th sortable-table-header="date" class="hidden-xs hidden-md hidden-sm">Date</th>
                                    <th></th>
                                </tr>
                            </thead>
                            <tbody>
                                <tr ng-repeat="row in range.transactions | orderBy:predicate:reverse">
                                    <td class="hidden-xs">

                                        <span class="percentage-row" ng-show="row.category !== 'Salary' && row.category !== 'OtherIncome'">
                                            <svg set-width="{{calcRowPercentage(row.amount, findMax(range.transactions))}}" height="30">
                                                <rect set-width="{{calcRowPercentage(row.amount, findMax(range.transactions))}}" height="30" style="stroke-width:0;fill:{{row.color}};opacity:0.2" />
                                            </svg>
                                        </span>

                                        {{ $index + 1 }}
                                    </td>
                                    <td>{{row.amount.toFixed(2)}}</td>
                                    <td style="text-align:left;padding-left: 20px;">
                                        <img class="hidden-xs hidden-sm" style="position: absolute;" height="20" ng-src="{{getIcon(row.category)}}" alt="{{row.category}}" />
                                        <span style="padding-left: 30px;">{{row.category | camelCaseToNormal}}</span>
                                    </td>
                                    <td class="hidden-xs hidden-sm" style="text-align: left" title="{{row.description}}">{{row.description | maxLength : 25}}</td>
                                    <td class="hidden-md hidden-xs hidden-sm">{{row.date | date}}</td>
                                    <td class="text-right">
                                        <a class="link edit-link" href="{{urls.edit}}/{{row.transactionId}}" title="Edit"><i class="glyphicon glyphicon-pencil"></i></a>
                                        <a class="link delete-link" href="{{urls.del}}/{{row.transactionId}}" title="Delete">
                                            <i class="glyphicon glyphicon-trash"></i>
                                        </a>
                                    </td>
                                </tr>
                            </tbody>
                        </table>
                    </div>


                </div>

            </div>

        }
    </div>
    
    @*<div class="row">
        <div class="col-xs-12">Icons made by <a href="http://www.flaticon.com/authors/freepik" title="Freepik">Freepik</a> from <a href="http://www.flaticon.com" title="Flaticon">www.flaticon.com</a> is licensed by <a href="http://creativecommons.org/licenses/by/3.0/" title="Creative Commons BY 3.0">CC BY 3.0</a></div>
    </div>*@

</div>

<script>

    (function() {
        'use strict';

        angular.module('budgetApp').factory('transactionModel', function() {

            return {
                filter : @Html.Raw(Model.Range.ToJson()),
                model: @Html.Raw(Model.RangeViewers.ToJson()),
                overview : @Html.Raw(Model.OverviewGraph),
                urls: {
                    del: '@Url.Action("Delete")',
                    edit: '@Url.Action("Edit")',
                    details: '@Url.Action("Details")'
                }
            };

        });

    })();

</script>