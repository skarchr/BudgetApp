@using BudgetApp.Extensions
@model BudgetApp.Models.Transaction

@{
    ViewBag.Title = "Add Transaction";
}

<div class="row" style="margin-top: 40px;" ng-controller="addTransactionController">
    @using (Html.BeginForm("Create", "Transactions", FormMethod.Post, new { name="addForm", @class="form-horizontal" }))
    {
        @Html.AntiForgeryToken()

        <div class="col-md-offset-3 col-md-9">
                
            <div class="form-group">
                <label for="Amount" class="control-label col-sm-3">Amount <span class="required-tag"></span></label>
                <div class="col-sm-9 form-inline" style="padding-top:4px;">

                    @Html.TextBoxFor(m => m.Amount, new { @class = "form-control", @placeholder = "#.##", @ng_model = "model.amount", @required = "required", @ng_pattern = "regexDouble" })

                    <span class="text-danger" ng-show="addForm.Amount.$invalid && addForm.Amount.$touched">Invalid format (#.##)</span>
                    <span class="text-success" ng-show="addForm.Amount.$valid">OK!</span>
                </div>
            </div>
                
            <div class="form-group">
                <label for="Category" class="control-label col-sm-3">Category <span class="required-tag"></span></label>
                <div class="col-sm-9 form-inline" style="padding-top:4px;">

                    @Html.DropDownGroupListFor(model => model.Category, Dropdownlist.GroupedCategories(Model != null ? Model.Category.ToString() : ""), " ", new { @class = "form-control", @required = "required", @ng_model = "model.category" })

                    <span class="text-danger" ng-show="addForm.Category.$invalid && addForm.Category.$dirty">Invalid format</span>
                    <span class="text-success" ng-show="addForm.Category.$valid">OK!</span>
                </div>
            </div>
                
            <div class="form-group">
                <label for="Description" class="control-label col-sm-3">Description <span class="required-tag"></span></label>
                <div class="col-sm-9 form-inline" style="padding-top:4px;">

                    @Html.TextAreaFor(model => model.Description, new { @class = "form-control", @required = "required", @ng_model = "model.description" })

                    <span class="text-danger" ng-show="addForm.Description.$invalid && addForm.Description.$touched">Invalid format</span>
                    <span class="text-success" ng-show="addForm.Description.$valid">OK!</span>
                </div>
            </div>
                
            <div class="form-group">
                <label for="Date" class="control-label col-sm-3">Date <span class="required-tag"></span></label>
                <div class="col-sm-9 form-inline" style="padding-top:4px;">

                    @Html.HiddenFor(model => model.Date, new {@required = "required", @ng_model = "model.date", @type="date", @style="display:none;" })
                    
                   
                    <span class="input-group">
                        <input style="width: 240px;" name="Date" id="Date" type="text" class="form-control" datepicker-popup="dd.MM.yyyy" max-date="today" ng-model="model.date" is-open="opened" datepicker-options="dateOptions" ng-required="true" close-text="Close" />
                        <span class="input-group-btn" style="width:0;padding:0px !important;">
                            <button type="button" class="btn btn-default" ng-click="open($event)" style="padding-bottom: 7px;"><i class="glyphicon glyphicon-calendar"></i></button>
                        </span>
                        
                    </span>
                    
                    @*<span class="text-danger" ng-show="addForm.Date.$invalid && addForm.Date.$touched">Invalid format</span>
                    <span class="text-success" ng-show="addForm.Date.$valid">OK!</span>*@
                </div>
            </div>
                
            <div class="form-group">
                <div class="col-sm-offset-3 col-sm-9">
                    <input type="submit" value="Add transaction" class="btn btn-primary {{addForm.$valid ? 'tada':''}}" style="width:280px;" ng-disabled="addForm.$invalid" />
                </div>
            </div>

        </div>            
    }

</div>
<script>
    (function() {
        'use strict';

        angular.module('budgetApp').factory('addTransactionModel', function() {

            return {
                model: @Html.Raw(Model.ToJson())
            };

        });

    })();
</script>