@using BudgetApp.Extensions
@using BudgetApp.Models
@model BudgetApp.Models.RegisterViewModel
@{
    ViewBag.Title = "Register";
}

<h1 class="text-center">Register</h1>
<hr />

<div class="row" ng-controller="loginController" style="margin-top: -10px;">

    @using (Html.BeginForm("Register", "Account", FormMethod.Post, new { @class = "form-horizontal", role = "form", @name = "registerform" }))
    {
        @Html.AntiForgeryToken()



        <div class="form-horizontal" style="margin-top: 40px;">

            <div class="col-md-3" data-slide-down>
                <div class="form-group">

                    <div class="col-sm-offset-3 col-md-12">
                        <img ng-show="registerform.Email.$valid && registerform.Email.$touched && !loading" class="flip-in" gravatar-src="model.Email" gravatar-size="200" style="border:2px solid #0094ff;padding:2px; -ms-border-radius: 104px; border-radius: 104px;" />
                    </div>
                </div>
            </div>

            <div class="col-md-9" data-slide-down>

                <div class="form-group">
                    <label for="Email" class="control-label col-sm-3">Email <span class="required-tag"></span></label>
                    <div class="col-sm-9 form-inline" style="padding-top:4px;">

                        @Html.TextBoxFor(m => m.Email, new { @class = "form-control", @placeholder = "A confirmation email will be sent", @ng_model = "model.Email", @required = "required", @type = "email" })

                        <span class="text-danger" ng-show="registerform.Email.$invalid && registerform.Email.$touched && registerform.Email.$dirty && model.Email !== '' && !loading">Invalid email address</span>
                        <span class="text-danger" ng-show="userExist === 'True' && registerform.Email.$valid">Email already in use!</span>
                        @*<span class="text-muted" ng-show="loading">Checking...</span>*@
                        <span class="text-success" ng-show="registerform.Email.$valid && !loading && userExist === 'False'"> OK! </span>
                    </div>
                </div>

                <div class="form-group">
                    <label for="Country" class="control-label col-sm-3">Country</label>
                    <div class="col-sm-9 form-inline" style="padding-top:4px;">

                        <select class="form-control" id="Country" name="Country" ng-model="model.Country">
                            <option class="text-muted" value=""></option>
                            <option ng-repeat="country in countries" value="{{country.name}}">{{country.name}}</option>
                        </select>

                        <span class="text-success" ng-show="registerform.Country.$valid && registerform.Country.$dirty && model.Country !== ''">Awesome!</span>
                    </div>
                </div>

                <div class="form-group">
                    <label for="Currency" class="control-label col-sm-3">Currency <span class="required-tag"></span></label>
                    <div class="col-sm-9 form-inline" style="padding-top:4px;">

                        <select class="form-control" id="Currency" name="Currency" ng-model="model.Currency" required>
                            <option class="text-muted" value=""></option>
                            <option ng-repeat="currency in currencies" value="{{currency.cc}}" title="{{currency.name}}">{{currency.cc}}</option>
                        </select>

                        <label class="text-danger" ng-show="registerform.Currency.$invalid && registerform.Currency.$dirty">Mandatory field</label>
                        <label class="text-success" ng-show="registerform.Currency.$valid">OK!</label>

                    </div>
                </div>

                <div class="form-group">
                    <label for="Password" class="control-label col-sm-3">Password <span class="required-tag"></span></label>
                    <div class="col-sm-9 form-inline" style="padding-top:4px;">

                        @Html.PasswordFor(m => m.Password, new { @class = "form-control", @placeholder = "Minimum 6 characters", @ng_model = "model.Password", @required = "required", @ng_minlength = "6" })

                        <span class="text-danger" ng-show="registerform.Password.$invalid && registerform.Password.$touched && registerform.Password.$error.minlength">Minimum 6 characters</span>
                        <span class="text-success" ng-show="registerform.Password.$valid && registerform.Password.$touched">OK!</span>

                    </div>

                    <svg class="col-sm-offset-3" height="6px" width="300px" style="padding-left:15px;float:left;">

                        <rect ng-show="passwordStrength >= 1" x="0" y="1" width="69" height="6" style="fill:#3da13e;" />
                        <rect ng-show="passwordStrength >= 2" x="70" y="1" width="69" height="6" style="fill:#3da13e;" />
                        <rect ng-show="passwordStrength >= 3" x="140" y="1" width="69" height="6" style="fill:#3da13e;" />
                        <rect ng-show="passwordStrength >= 4" x="210" y="1" width="69" height="6" style="fill:#3da13e;" />

                    </svg>

                </div>

                <div class="form-group" style="margin-top: -8px;">
                    <label for="ConfirmPassword" class="control-label col-sm-3">Confirm password <span class="required-tag"></span></label>
                    <div class="col-sm-9 form-inline" style="padding-top:4px;">

                        @Html.PasswordFor(m => m.ConfirmPassword, new { @class = "form-control", @ng_model = "model.ConfirmPassword", @required = "required", @ng_disabled = "model.Password === '' || model.Password === undefined" })

                        <span class="text-danger" ng-show="model.ConfirmPassword !== model.Password && registerform.ConfirmPassword.$touched && registerform.Password.$dirty">Passwords doesn't match!</span>
                        <span class="text-success" ng-show="model.ConfirmPassword === model.Password && model.ConfirmPassword !== undefined">OK!</span>
                    </div>

                </div>

                <div class="form-group" style="margin-top: 30px;margin-bottom: 30px;">
                    <label class="control-label col-sm-3"></label>
                    <div class="col-sm-9 form-inline" style="padding-top:4px;">
                        <div class="checkbox">
                            <label>
                                @Html.CheckBoxFor(m => m.DisclaimerAgreed, new { @ng_model = "model.DisclaimerAgreed", @required = "required" }) I have read the
                                <a href="#" data-toggle="modal" data-target="#disclaimerModal"> disclaimer</a> and agree to its <br /> terms of use.
                                <span style="color:#b94a48;font-size: 16px;">*</span>
                            </label>
                        </div>
                    </div>

                </div>

                <div class="form-group">
                    <div class="col-sm-offset-3 col-sm-9">
                        <input type="submit" ng-disabled="registerform.$invalid || (model.Password !== model.ConfirmPassword) || userExist === 'True' || loading" class="btn btn-primary" style="width:280px;" value="Register" />
                    </div>
                </div>

                <div class="form-group">
                    <div class="col-sm-offset-3 col-sm-9">
                        @Html.ActionLink("Cancel", "Login", "Account", new { @class = "btn btn-default form-control", @style = "width:280px;" })
                    </div>
                </div>

            </div>

        </div>

    }

    @Html.Partial("_Disclaimer")

</div>

<div class="row" ng-controller="loginController" style="margin-top: 40px;">
    <div class="form-horizontal">

        <div class="col-md-offset-3 col-md-9">

            <div class="form-group">

                <label class="col-sm-3 control-label"></label>
                <div class="col-sm-9">

                    Or register with:

                </div>


            </div>

            <div class="form-group">

                <label class="col-sm-3 control-label"></label>
                <div class="col-sm-9">

                    @Html.Partial("_ExternalLoginsListPartial", new ExternalLoginListViewModel { ReturnUrl = ViewBag.ReturnUrl })

                </div>


            </div>

        </div>

    </div>
</div>


@Html.Partial("_LoginModel", Html.Raw(Model.ToJson()))

