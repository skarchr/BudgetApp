@using BudgetApp.Extensions
@model BudgetApp.Models.IndexViewModel
@{
    ViewBag.Title = "Manage";
}

<p class="text-success">@ViewBag.StatusMessage</p>

<div class="row" fade-in="500" style="margin-top:30px;">
    
    <div class="col-xs-12 col-md-2 text-center">
        <img gravatar-src="'@User.Identity.Name'" gravatar-size="200">
    </div>



    <div class="col-xs-12 col-md-10">        

        <div class="form-horizontal" ng-controller="currencyController">


            <div class="form-group">
                <label for="Username" class="control-label col-sm-4">Username</label>
                <div class="col-sm-8">
                    <input type="text" class="form-control no-input" value="@User.Identity.Name" readonly="readonly" />
                </div>
            </div>

            <div class="form-group">
                <label for="Currency" class="control-label col-sm-4">Currency</label>
                <div class="col-sm-8">                    
                    <select class="form-control" id="Currency" name="Currency" ng-model="model.currency" required ng-change="saveProfile()">
                        <option class="text-muted" value="">-- Currency --</option>
                        <option ng-repeat="currency in currencies" value="{{currency.cc}}" title="{{currency.name}}">{{currency.cc}}</option>
                    </select>
                </div>
            </div>

            <div class="form-group">
                <label for="Account" class="control-label col-sm-4">Country</label>
                <div class="col-sm-8">
                    <select class="form-control" id="Country" name="Country" ng-model="model.country" required ng-change="saveProfile()">
                        <option class="text-muted" value="">-- Country --</option>
                        <option ng-repeat="country in countries" value="{{country.name}}">{{country.name}}</option>
                    </select>
                </div>
            </div>

            <div class="form-group">
                <label for="Password" class="control-label col-sm-4">Password</label>
                <div class="col-sm-8">
                    <input type="password" class="form-control no-input" value="@(Model.HasPassword ? "xxxxxxxxxxxxxx":"")" readonly="readonly" />
                    @if (Model.HasPassword)
                    {
                        @Html.ActionLink("Change your password", "ChangePassword")
                    }
                    else
                    {
                        @Html.ActionLink("Create password", "SetPassword")
                    }
                </div>
            </div>
            <div class="form-group">
                <label for="External" class="control-label col-sm-4">External logins</label>
                <div class="col-sm-8">
                    @{
                        foreach (var userLoginInfo in Model.Logins)
                        {
                            <input type="text" value="@userLoginInfo.LoginProvider" class="form-control no-input" readonly="readonly" />

                        }

                        if (Model.Logins.Count == 0)
                        {
                            <input type="text" value="None" class="form-control no-input" readonly="readonly" />
                        }
                    }

                    @Html.ActionLink("Manage", "ManageLogins")
                </div>
            </div>

            <div class="form-group">
                <label for="twoFactor" class="control-label col-sm-4">Two-factor authentication</label>
                <div class="col-sm-8">
                    @if (Model.TwoFactor)
                    {
                        using (Html.BeginForm("DisableTwoFactorAuthentication", "Manage", FormMethod.Post, new { @class = "form-horizontal", role = "form" }))
                        {
                            @Html.AntiForgeryToken()
                            <text>Enabled
                                <input type="submit" value="Disable" class="btn btn-link" />
                            </text>
                        }
                    }
                    else
                    {
                        using (Html.BeginForm("EnableTwoFactorAuthentication", "Manage", FormMethod.Post, new { @class = "form-horizontal", role = "form" }))
                        {
                            @Html.AntiForgeryToken()
                            <text>Disabled
                                <input type="submit" value="Enable" class="btn btn-link" />
                            </text>
                        }
                    }
                </div>
            </div>

            <hr />

            <div class="form-group">
                <label for="Transactions" class="control-label col-sm-4">Number of Transactions</label>
                <div class="col-sm-8">
                    @Html.TextBoxFor(m => m.TransactionCount, new { @class = "form-control no-input", @readonly = "readonly" })
                </div>
            </div>

            <div class="form-group">
                <label for="Mappings" class="control-label col-sm-4">Number of Mappings</label>
                <div class="col-sm-8">
                    @Html.TextBoxFor(m => m.MappingCount, new { @class = "form-control no-input", @readonly = "readonly" })
                </div>
            </div>

            <div class="form-group">
                <label for="Mappings" class="control-label col-sm-4">Failed Access Attempts</label>
                <div class="col-sm-8">
                    @Html.TextBoxFor(m => m.AccessFailedCount, new { @class = "form-control no-input", @readonly = "readonly" })
                </div>
            </div>
        </div>
    </div>

</div>

<script>
    (function() {
        'use strict';
        angular.module('budgetApp').factory('userModel', function() {
            return {
                model: @Html.Raw(Model.ToJson())
            };
        });

    })();
</script>